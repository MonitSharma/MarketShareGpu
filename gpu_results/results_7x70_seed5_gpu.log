Storing mark share instance as markshare_m_7_n_60_seed_5.prb
Running markshare: m=7, n=60, seed=5, iter=0, nthread=24
[
 [ 15  3 60 58 14 25 64 68 34  6 42 27 53 24 36 34 20 69 13 56  5 45 51 57 30 16 11 53 61  7 19 14 28  8 20 61 44 36 40 34 41 51 18  1 19  6 17 57 22 58 10 62 11 67 67 39 67  6 13 69 | 1031 ]
 [  1 33 14 47 48 59 54 43  1 39 40 25  0 48 36 57 44 64 68  0 18 50 56 46 60 13 64 48  0 40 32 40 68  4 27 12 56 23 38 42 53 13 33  8  2 65  6 21  7 33 17  4 67 19 44 15 57 66 39 26 | 1026 ]
 [ 44 26 56 21 64 13 63 51 57 64  6 47 25 29  2 39 38 15 55 10  3 58 13 59 25 45 17  9 55 12 24 22 44 66 34 15 40 62 65 65 66  5  7 56 59 69 24 24  7 33 26 51 35 26 67  2 26 10  0 22 | 1036 ]
 [ 60  8  7 25 33 48 59 55 36 31 31 67 56 35  1 34 40  3 28 17 68 52 56 43  3 52 13 69 31 41 49 35 23 15 25 40 64 54 66 58 28 16 62 59 23  9  5 53 36 65 46 50 62  8 67  8 53 42 53 68 | 1172 ]
 [ 49 63 49 18 53 41 68 23 26 31  5 45 16 23 15 59 25 43 56 14  4 26 31 36 56 47 18 19  4 52 16 49  5  6 56  7 11 24 13 57 57 64 56 53 41 61 64 59  4 11 67 40 39 24 21 51 57  2 46 12 | 1044 ]
 [ 69  9  7 68 40 65 33 49 45 65 16 51  2 26 38 62 25 40 62 58 32  6 29  8 44 50 36 14 67 25 55 66 34 51 14 29 42 11 52 36 52  7 69 49 15 54 29 60 29 49 22 63 25 53 33 53 37  5 18  6 | 1129 ]
 [  9 19 21 10  9  7 22 33 47 22 42 48 69 29 39 59 38 32 44 60 50  4 43 10 41 45 42 27 24 32 54  7 42 12 21 40 17 38  4 32 24 59  0 20 11 44  4 28 19 33 24 60 41 26 54 33 43  9 11  5 |  896 ]
]
Running reduced dim shroeppel shamir
Running with 24 threads
Max reducible dimension is 4 (encoded with basis 12001)
Reducing 1 dimensions for Shroeppel-Shamir - leaving 6 for verification
Splitting sets into [0, 14]; [15, 29]; [30, 44]; [45, 60]
Generating 32768 possible subsets for as set of size 15.
Generating 32768 possible subsets for as set of size 15.
Generating 32768 possible subsets for as set of size 15.
Generating 32768 possible subsets for as set of size 15.
Running the search loop

    1     0.28s [0.006295 GB]:     26 +   1005; 7 x 1 possible solutions
    2     0.29s [0.006295 GB]:     27 +   1004; 11 x 1 possible solutions
    3     0.29s [0.006295 GB]:     32 +    999; 14 x 2 possible solutions
    4     0.29s [0.006295 GB]:     33 +    998; 14 x 2 possible solutions
    5     0.29s [0.006295 GB]:     34 +    997; 19 x 1 possible solutions
    6     0.29s [0.006295 GB]:     35 +    996; 17 x 1 possible solutions
    7     0.29s [0.006296 GB]:     36 +    995; 21 x 1 possible solutions
    8     0.29s [0.006296 GB]:     37 +    994; 20 x 2 possible solutions
    9     0.29s [0.006296 GB]:     38 +    993; 23 x 2 possible solutions
   10     0.29s [0.006296 GB]:     39 +    992; 25 x 2 possible solutions
   20     0.29s [0.006296 GB]:     49 +    982; 50 x 7 possible solutions
   30     0.30s [0.006298 GB]:     59 +    972; 101 x 24 possible solutions
   40     0.30s [0.006300 GB]:     69 +    962; 189 x 57 possible solutions
   50     0.30s [0.006304 GB]:     79 +    952; 338 x 125 possible solutions
   60     0.30s [0.006310 GB]:     89 +    942; 560 x 226 possible solutions
   70     0.31s [0.006317 GB]:     99 +    932; 958 x 427 possible solutions
   80     0.31s [0.006331 GB]:    109 +    922; 1522 x 759 possible solutions
   90     0.31s [0.006348 GB]:    119 +    912; 2413 x 1281 possible solutions
  100     0.32s [0.006375 GB]:    129 +    902; 3675 x 2118 possible solutions
  200     0.39s [0.008241 GB]:    229 +    802; 102298 x 84177 possible solutions
Found market share solution from SS-Algorithm!
Subset for index 16933 (binary 0000000000000000000000000000000000000000000000000100001000100101): 15, 60, 25, 6, 36
Subset for index 17540 (binary 0000000000000000000000000000000000000000000000000100010010000100): 69, 51, 16, 7
Subset for index 19948 (binary 0000000000000000000000000000000000000000000000000100110111101100): 28, 8, 61, 44, 36, 40, 41, 51, 19
Subset for index 16125 (binary 0000000000000000000000000000000000000000000000000011111011111101): 6, 57, 22, 58, 10, 62, 11, 67, 39, 67, 6, 13
The sum is 142 + 143 + 328 + 418 = 1031
Writing solution to markshare_m_7_n_60_seed_5.sol
Found feasible solution!
Eval GPU: check results     	 total time     0.03s
Eval GPU: binary search     	 total time     0.03s
Eval GPU: sort required     	 total time     0.07s
Candidate extraction        	 total time     0.16s
List traversal              	 total time     0.21s
Solution time               	 total time     0.50s
Evaluate solutions GPU      	 total time     0.16s
Setup time                  	 total time     0.28s
