Storing mark share instance as markshare_m_6_n_50_seed_3.prb
Running markshare: m=6, n=50, seed=3, iter=0, nthread=24
[
 [ 33  4 42 50 17  7 30 34 53 26 53  1  7  2 12 14  3  5 26 41  1  8 27 27 38 12 16 21 40 29 35 54  1 45 33 58 15 24 24 33 17 18 41 35 26 16  9 27 32 45 | 633 ]
 [ 46 49 18 15 13 53 23 43 56  1 58  8 40 19 54 48 50 23 22 25  5 24 39 47 33 42 21  1 13 18 24 33 28 44 16 36 17 12 27 39 51 39 35 52 17 48 16 22 27  4 | 747 ]
 [ 12 45 12  3 30 50  5 41 29 26 21 21 42 30 44 27 41 48 41 18 22 50 40 29 20 32 34 49 19 31 26  8  3 18 14 48 58 19 13  1 41 28 39  1 43 30 28 55 35 12 | 716 ]
 [  4 55  4 16 11 10  9 59  6 41  7 45 33  6 11  5 57 39 40 19 32 21 42 31 15 25 55 49 50 34 43 52 28 48 50 20 44 46 39 53 54 47 38 17 21 52 33 32 11 49 | 804 ]
 [ 11 14 43 12 47 57 58 45 51 11 32 28  5 30 29 10 55 17 47 16 29 53 27 30 13 34 10 20  4 36 53  7 38  2  8 59 24 16  2 15 12 16 43 15 39 53 28 50 16  8 | 689 ]
 [ 39 59 57 21 26 32  4 29  3  7  4 51 57 13 32 49 50 59 10 59 15  9 41 28 53 42 20 20  3 41 51 44 17 49 44 50  9  4 41 18 50 33 43 55 21  5 43 24  8 32 | 787 ]
]
Running reduced dim shroeppel shamir
Running with 24 threads
Max reducible dimension is 4 (encoded with basis 10001)
Reducing 1 dimensions for Shroeppel-Shamir - leaving 5 for verification
Splitting sets into [0, 11]; [12, 24]; [25, 36]; [37, 50]
Generating 4096 possible subsets for as set of size 12.
Generating 8192 possible subsets for as set of size 13.
Generating 4096 possible subsets for as set of size 12.
Generating 8192 possible subsets for as set of size 13.
Running the search loop

    1     0.49s [0.000985 GB]:      0 +    633; 1 x 137 possible solutions
    2     0.49s [0.000985 GB]:      1 +    632; 2 x 149 possible solutions
    3     0.54s [0.000989 GB]:      2 +    631; 2 x 164 possible solutions
    4     0.54s [0.000989 GB]:      3 +    630; 3 x 165 possible solutions
    5     0.54s [0.000989 GB]:      4 +    629; 4 x 179 possible solutions
    6     0.54s [0.000989 GB]:      5 +    628; 5 x 211 possible solutions
    7     0.54s [0.000990 GB]:      6 +    627; 6 x 198 possible solutions
    8     0.54s [0.000990 GB]:      7 +    626; 8 x 196 possible solutions
    9     0.54s [0.000990 GB]:      8 +    625; 11 x 225 possible solutions
   10     0.54s [0.000990 GB]:      9 +    624; 12 x 234 possible solutions
   20     0.54s [0.000994 GB]:     19 +    614; 41 x 412 possible solutions
   30     0.54s [0.000998 GB]:     29 +    604; 93 x 751 possible solutions
   40     0.55s [0.001006 GB]:     39 +    594; 213 x 1176 possible solutions
   50     0.55s [0.001017 GB]:     49 +    584; 455 x 1862 possible solutions
   60     0.56s [0.001033 GB]:     59 +    574; 845 x 2857 possible solutions
   70     0.56s [0.001057 GB]:     69 +    564; 1503 x 4182 possible solutions
   80     0.56s [0.001084 GB]:     79 +    554; 2537 x 6185 possible solutions
   90     0.57s [0.001122 GB]:     89 +    544; 4114 x 8729 possible solutions
  100     0.58s [0.001182 GB]:     99 +    534; 6394 x 12024 possible solutions
Found market share solution from SS-Algorithm!
Subset for index 582 (binary 0000000000000000000000000000000000000000000000000000001001000110): 4, 42, 30, 26
Subset for index 707 (binary 0000000000000000000000000000000000000000000000000000001011000011): 7, 2, 26, 41, 8
Subset for index 3537 (binary 0000000000000000000000000000000000000000000000000000110111010001): 12, 29, 54, 1, 45, 58, 15
Subset for index 2555 (binary 0000000000000000000000000000000000000000000000000000100111111011): 24, 24, 17, 18, 41, 35, 26, 16, 32
The sum is 102 + 84 + 214 + 233 = 633
Writing solution to markshare_m_6_n_50_seed_3.sol
Found feasible solution!
Eval GPU: check results     	 total time     0.02s
Eval GPU: binary search     	 total time     0.02s
Eval GPU: sort required     	 total time     0.05s
Candidate extraction        	 total time     0.04s
List traversal              	 total time     0.16s
Solution time               	 total time     0.65s
Evaluate solutions GPU      	 total time     0.12s
Setup time                  	 total time     0.49s
