Storing mark share instance as markshare_m_5_n_40_seed_5.prb
Running markshare: m=5, n=40, seed=5, iter=0, nthread=24
[
 [  8  2 34 33  8 14 36 39 19  3 24 15 30 14 20 19 11 39  7 32  3 25 29 32 17  9  6 30 35  4 10  8 16  4 11 35 25 20 23 19 | 384 ]
 [ 23 29 10  0 11  3 10 33 13 33  5 35  6 38 38 22 38  3  7 39  0 19  8 27 27 33 31 24  0 22 23 14  0 27 20 32 25 37 39  0 | 402 ]
 [ 10 28 32 26 34  7 36 27  0 23 18 23 39  2 15  7 32 13 21 24 30  7 19  4  1 37  3 12  4 18 10  2 38 11 25  9 32 37 22 15 | 376 ]
 [ 25 15 32 12 37  7 36 29 32 37  3 27 14 16  1 22 21  8 31  6  2 33  7 33 14 25  9  5 31  7 14 12 25 38 19  9 23 35 37 37 | 413 ]
 [ 37  3  4 32 33 39 13 14  4 19 15 29 20 14 38  1 14  6  0 12 34  4  4 14 19 27 33 31 20 17 17 38 32 20  0 19 22  2 16  9 | 362 ]
]
Running reduced dim shroeppel shamir
Running with 24 threads
Max reducible dimension is 4 (encoded with basis 8001)
Reducing 1 dimensions for Shroeppel-Shamir - leaving 4 for verification
Splitting sets into [0, 9]; [10, 19]; [20, 29]; [30, 40]
Generating 1024 possible subsets for as set of size 10.
Generating 1024 possible subsets for as set of size 10.
Generating 1024 possible subsets for as set of size 10.
Generating 1024 possible subsets for as set of size 10.
Running the search loop

    1     0.24s [0.000133 GB]:     23 +    361; 7 x 1 possible solutions
    2     0.24s [0.000133 GB]:     26 +    358; 11 x 1 possible solutions
    3     0.24s [0.000133 GB]:     27 +    357; 14 x 2 possible solutions
    4     0.24s [0.000133 GB]:     29 +    355; 18 x 1 possible solutions
    5     0.25s [0.000133 GB]:     30 +    354; 18 x 2 possible solutions
    6     0.25s [0.000133 GB]:     31 +    353; 17 x 2 possible solutions
    7     0.25s [0.000133 GB]:     32 +    352; 24 x 2 possible solutions
    8     0.25s [0.000133 GB]:     33 +    351; 23 x 3 possible solutions
    9     0.25s [0.000134 GB]:     34 +    350; 26 x 3 possible solutions
   10     0.25s [0.000134 GB]:     35 +    349; 29 x 3 possible solutions
   20     0.25s [0.000135 GB]:     45 +    339; 58 x 10 possible solutions
   30     0.25s [0.000136 GB]:     55 +    329; 126 x 34 possible solutions
   40     0.26s [0.000139 GB]:     65 +    319; 230 x 86 possible solutions
   50     0.26s [0.000143 GB]:     75 +    309; 402 x 181 possible solutions
   60     0.26s [0.000149 GB]:     85 +    299; 650 x 346 possible solutions
   70     0.27s [0.000156 GB]:     95 +    289; 998 x 612 possible solutions
   80     0.27s [0.000169 GB]:    105 +    279; 1455 x 1010 possible solutions
Found market share solution from SS-Algorithm!
Subset for index 524 (binary 0000000000000000000000000000000000000000000000000000001000001100): 34, 33, 3
Subset for index 9 (binary 0000000000000000000000000000000000000000000000000000000000001001): 24, 14
Subset for index 955 (binary 0000000000000000000000000000000000000000000000000000001110111011): 3, 25, 32, 17, 9, 30, 35, 4
Subset for index 253 (binary 0000000000000000000000000000000000000000000000000000000011111101): 10, 16, 4, 11, 35, 25, 20
The sum is 70 + 38 + 155 + 121 = 384
Writing solution to markshare_m_5_n_40_seed_5.sol
Found feasible solution!
Eval GPU: check results     	 total time     0.01s
Eval GPU: binary search     	 total time     0.00s
Eval GPU: sort required     	 total time     0.01s
Candidate extraction        	 total time     0.00s
List traversal              	 total time     0.04s
Solution time               	 total time     0.27s
Evaluate solutions GPU      	 total time     0.03s
Setup time                  	 total time     0.24s
