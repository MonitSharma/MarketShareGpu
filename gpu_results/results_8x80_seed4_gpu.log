Storing mark share instance as markshare_m_8_n_70_seed_4.prb
Running markshare: m=8, n=70, seed=4, iter=0, nthread=24
[
 [ 77 72 43 13 77 68 57 48 55 47 17 11 78 17  0 55 20 72 34 50 62  0 15 45 69 28 78 48 13 31 47 64  0 49 30 21  3 51 76 64 34  1 75  3 62 75 69 35 13 35  5  5 48 14 13 69 58 67 32 74 42 69 75 66 41 20  8  2 12 18 | 1422 ]
 [ 43 16 41 14 51 25 32 19 51 30 31 50 49 17 61 11 14 46 30 28 40 37 54 28 20  6 44 20 49  3 71 74 29 18 51 64 15 10 39  6 14 54 73 75 34 25 66 70 33 55 72 28 32 72 26 30 45 67 67 58 68 55 47 53  6  6 47  3 19  7 | 1322 ]
 [ 58 17 71 64 41  8 48  5  5 75 43 13 10 47 49 76 29 29 61  1  3 41  8 24 54 66 41 74 45 10 67 66 39 62 64 55 40 52 74 74 53 18 11 38 29 74 69 14 28 12 15 77 37 25 31 70 49 43 34 29 20 10 32  9 33  5 72 15 78  0 | 1369 ]
 [ 49 70  6 74 58 40 54 59 66 39 27  0  4 36 48 11  9 24 60 60 63 60 32 73 75 74 13  7 75 15 37 44 61  0 60 18 78  2 77  6  3 52  1 46 43 58  2 72 52  1 42 71 53 40 35 49 21 10 75 37 58 50  0 39  7 74 50 74 23 39 | 1420 ]
 [ 32 32 62 64 28 41 74 39 57 69 44 71 14 11 32 58 61 45 79 71  5 25 10 60 59 22 66  9  7 18 66 61 62 63 55 52 27 24 35 79 29 23 67 53 26 21 25 33 74 70 73 47 77 22 64 59  6 58  7 55 44 36 68 38 70 32 50 76 76  1 | 1584 ]
 [ 12 25 17 79 26 70 20  1 24  8  9  7 30 21  2 15 43 31 75 63 35  7 49 30 48 31 74 24 58 37 65 79 26 59 72  6 14 49 32 15 58 30 26 75 70 18 68 32 13 77 18  3  4 22 68 21 27 37 31 33 21 60  9 20 36 69 18 47 45 56 | 1250 ]
 [ 16  2 40 10 75 43 29 20 76 14  4  8 43  7 47 42 76 16 74 23 40 74 60 14 78 51 58  8 76 34 75 58 38 66 52 31 14  8 34 44 69 63 46 79 22 66  9 42 18 33  9  5 18 15 30 36  3 27 67 14 32 69 45 28 50 13 10 23  6 59 | 1292 ]
 [ 12 76 78 53  8 25 33 40 70  7 46 50  1 42 71 23 30 45 13 32 26 63 47 28  3 24 51 10 48 71 18 32 34 69 15 58  1 47 46 65 35 53 67 11 15 49 35  5 53 71  5 62 28  0 54 74 19 17 29 21 46 70 32 76 70 19 68 39 66 59 | 1379 ]
]
Running reduced dim shroeppel shamir
Running with 24 threads
Max reducible dimension is 4 (encoded with basis 14001)
Reducing 1 dimensions for Shroeppel-Shamir - leaving 7 for verification
Splitting sets into [0, 16]; [17, 34]; [35, 51]; [52, 70]
Generating 131072 possible subsets for as set of size 17.
Generating 262144 possible subsets for as set of size 18.
Generating 131072 possible subsets for as set of size 17.
Generating 262144 possible subsets for as set of size 18.
Running the search loop

    1     0.67s [0.044045 GB]:     67 +   1355; 120 x 1 possible solutions
    2     0.67s [0.044045 GB]:     68 +   1354; 96 x 1 possible solutions
    3     0.67s [0.044047 GB]:     69 +   1353; 144 x 1 possible solutions
    4     0.67s [0.044047 GB]:     70 +   1352; 64 x 3 possible solutions
    5     0.67s [0.044047 GB]:     71 +   1351; 208 x 2 possible solutions
    6     0.67s [0.044047 GB]:     72 +   1350; 176 x 4 possible solutions
    7     0.68s [0.044048 GB]:     73 +   1349; 256 x 5 possible solutions
    8     0.68s [0.044048 GB]:     74 +   1348; 184 x 3 possible solutions
    9     0.68s [0.044048 GB]:     75 +   1347; 352 x 8 possible solutions
   10     0.68s [0.044048 GB]:     76 +   1346; 280 x 6 possible solutions
   20     0.68s [0.044050 GB]:     86 +   1336; 400 x 26 possible solutions
   30     0.68s [0.044055 GB]:     96 +   1326; 640 x 67 possible solutions
   40     0.69s [0.044062 GB]:    106 +   1316; 1272 x 142 possible solutions
   50     0.69s [0.044067 GB]:    116 +   1306; 1608 x 266 possible solutions
   60     0.70s [0.044082 GB]:    126 +   1296; 2856 x 499 possible solutions
   70     0.70s [0.044099 GB]:    136 +   1286; 4376 x 873 possible solutions
   80     0.71s [0.044121 GB]:    146 +   1276; 5664 x 1484 possible solutions
   90     0.71s [0.044168 GB]:    156 +   1266; 9472 x 2473 possible solutions
  100     0.72s [0.044217 GB]:    166 +   1256; 13320 x 4022 possible solutions
  200     0.82s [0.048667 GB]:    266 +   1156; 307960 x 174032 possible solutions
  300     1.24s [0.092789 GB]:    366 +   1056; 3005376 x 2277976 possible solutions
  400     4.15s [0.307178 GB]:    466 +    956; 15248640 x 13644334 possible solutions
  500    18.69s [0.836432 GB]:    566 +    856; 44831896 x 44120534 possible solutions
Found market share solution from SS-Algorithm!
Subset for index 32476 (binary 0000000000000000000000000000000000000000000000000111111011011100): 43, 13, 77, 57, 48, 47, 17, 11, 78, 17, 0
Subset for index 37022 (binary 0000000000000000000000000000000000000000000000001001000010011110): 34, 50, 62, 0, 69, 31, 0
Subset for index 55093 (binary 0000000000000000000000000000000000000000000000001101011100110101): 21, 51, 64, 34, 3, 62, 75, 35, 35, 5
Subset for index 156344 (binary 0000000000000000000000000000000000000000000000100110001010111000): 69, 58, 67, 74, 69, 20, 8, 18
The sum is 408 + 246 + 385 + 383 = 1422
Writing solution to markshare_m_8_n_70_seed_4.sol
Found feasible solution!
Eval GPU: check results     	 total time     1.22s
Eval GPU: binary search     	 total time    37.24s
Eval GPU: sort required     	 total time    14.53s
Candidate extraction        	 total time     5.86s
List traversal              	 total time    54.13s
Solution time               	 total time    54.80s
Evaluate solutions GPU      	 total time    54.01s
Setup time                  	 total time     0.67s
