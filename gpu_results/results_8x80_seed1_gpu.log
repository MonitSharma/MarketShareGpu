Storing mark share instance as markshare_m_8_n_70_seed_1.prb
Running markshare: m=8, n=70, seed=1, iter=0, nthread=24
[
 [ 33 79 57 74  0 10 24 79 11 18  7 31 14 31 27 53 31 74 43 67 33 25 54 41 16 35 70 18  2 42 53 73 33 36 44 34 11 75 15 62 64 57 77 64 25  7 55 41 70 69 71 66  6 66  3 21 13  4 70 53  7 47 33 53 76 32 42 15 55 23 | 1410 ]
 [ 25 11 54 62 66 33  1  2 60 49 79 52 59 23 22 35 63 17  8  5 35 37 72  7 23 72 23  9 10 41  1  6 54 73 16 72 21 23 39 46  4 45 45 49 11 76 47 20 55 18  8 42 33 75 55 39 33 43  3 61 42  3 53 11 41 63 75  2 46 70 | 1287 ]
 [ 72 43 10 35 11 71 64 30 31 43 13 52 74 28 27 45 60 51 58 10 70 55 49 51 60 28 27 61 21 28 71 60 34 70 77  0 53 39 49  5  9 62 75  5 35 28 46 75 32 30 18 61 72 61 45 24  0 61 49 12 26 46 42  0 70 56 28 37 72 61 | 1487 ]
 [ 49 37  1 21 74 66 55 44 79  5 13 37 10 59 74 15 55 37  5 18 60 40 60 16 73  3 56 41  9 13  1 31  2  8  2 40 19  8 68 23 43 18 44 77 67 22  9 18 22  7 46 45 77 33 44 29  1 65 64 23 18 57 64 49 31 34 69 60 59 34 | 1278 ]
 [ 44 34 10 28  4 12  9 74  3 73  8 62 18 49 57  2 44 52  1 10  5 23 77 28 45 21 16  5 20 12 59 12 15 75 46 29 77  4 67 59 19 23 39 16 49 78 66 71 12 60  1 52  5  3 38 65 48 61 45 36 25 42 79  8 46 11 30 40 44 17 | 1209 ]
 [ 59 73 53 36 21 10  5 61 29 17 50  5 16  7 60 12  5 28 20  7 64 11 15 74 51 46 41 67 73 49 21 25  5 58 58 41 61 58 72 13 74 54  1 34 18 58 49 60 75 31 76 74 44 16 73  0 51 74 31 23 38 13 48  1 43 36 74 64 73 29 | 1406 ]
 [ 31 48 77  2 13 28 10  6 10 55 40  1  1 36 75 76 66 26  1 37 14  8 26 40 10 70 64 42 27 22 75 28 46 71 70 19 67  1 72 77 36 34 43 27 63 46 22 10 39 76 47 25  1 76 47 17 34 19 64 69 25 18 71 65 46 43 14 15 63 47 | 1345 ]
 [ 48  3  4  1 33  3 54 31 73 46  0 69 78 62 30 20 77  6 48 12 66 16 45 33 50 27 22 55 46 55 60  5 68  2 60 63 55 72 69  0 25 21 53 37 36 28 30 19 32  1 32 42 25 10 49 44 34 13 77 33 54 54 15 21 34  0 27 17 63  2 | 1247 ]
]
Running reduced dim shroeppel shamir
Running with 24 threads
Max reducible dimension is 4 (encoded with basis 14001)
Reducing 1 dimensions for Shroeppel-Shamir - leaving 7 for verification
Splitting sets into [0, 16]; [17, 34]; [35, 51]; [52, 70]
Generating 131072 possible subsets for as set of size 17.
Generating 262144 possible subsets for as set of size 18.
Generating 131072 possible subsets for as set of size 17.
Generating 262144 possible subsets for as set of size 18.
Running the search loop

    1     0.52s [0.044045 GB]:      0 +   1410; 2 x 201 possible solutions
    2     0.52s [0.044045 GB]:      2 +   1408; 2 x 224 possible solutions
    3     0.52s [0.044048 GB]:      7 +   1403; 2 x 324 possible solutions
    4     0.52s [0.044049 GB]:      9 +   1401; 2 x 354 possible solutions
    5     0.52s [0.044050 GB]:     10 +   1400; 2 x 364 possible solutions
    6     0.52s [0.044050 GB]:     11 +   1399; 2 x 390 possible solutions
    7     0.52s [0.044051 GB]:     12 +   1398; 2 x 417 possible solutions
    8     0.52s [0.044051 GB]:     13 +   1397; 2 x 420 possible solutions
    9     0.52s [0.044052 GB]:     14 +   1396; 2 x 467 possible solutions
   10     0.52s [0.044052 GB]:     16 +   1394; 4 x 523 possible solutions
   20     0.53s [0.044057 GB]:     27 +   1383; 12 x 871 possible solutions
   30     0.53s [0.044063 GB]:     37 +   1373; 18 x 1456 possible solutions
   40     0.53s [0.044072 GB]:     47 +   1363; 42 x 2205 possible solutions
   50     0.54s [0.044085 GB]:     57 +   1353; 76 x 3380 possible solutions
   60     0.54s [0.044111 GB]:     67 +   1343; 208 x 5257 possible solutions
   70     0.55s [0.044141 GB]:     77 +   1333; 360 x 7773 possible solutions
   80     0.55s [0.044182 GB]:     87 +   1323; 682 x 11299 possible solutions
   90     0.56s [0.044239 GB]:     97 +   1313; 1122 x 16615 possible solutions
  100     0.57s [0.044318 GB]:    107 +   1303; 1992 x 23862 possible solutions
  200     0.71s [0.050108 GB]:    207 +   1203; 130606 x 471938 possible solutions
  300     1.17s [0.102142 GB]:    307 +   1103; 2167764 x 4097433 possible solutions
  400     4.84s [0.345565 GB]:    407 +   1003; 14683884 x 18923845 possible solutions
Found market share solution from SS-Algorithm!
Subset for index 107033 (binary 0000000000000000000000000000000000000000000000011010001000011001): 33, 74, 0, 18, 31, 53, 31
Subset for index 5163 (binary 0000000000000000000000000000000000000000000000000001010000101011): 74, 43, 33, 54, 18, 42
Subset for index 55030 (binary 0000000000000000000000000000000000000000000000001101011011110110): 11, 75, 62, 64, 57, 77, 25, 7, 41, 69, 71
Subset for index 123366 (binary 0000000000000000000000000000000000000000000000011110000111100110): 66, 3, 4, 70, 53, 7, 32, 42, 15, 55
The sum is 240 + 264 + 559 + 347 = 1410
Writing solution to markshare_m_8_n_70_seed_1.sol
Found feasible solution!
Eval GPU: check results     	 total time     0.81s
Eval GPU: binary search     	 total time    15.55s
Eval GPU: sort required     	 total time     4.41s
Candidate extraction        	 total time     3.18s
List traversal              	 total time    21.51s
Solution time               	 total time    22.02s
Evaluate solutions GPU      	 total time    21.41s
Setup time                  	 total time     0.52s
