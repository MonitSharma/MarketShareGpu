Storing mark share instance as markshare_m_6_n_50_seed_1.prb
Running markshare: m=6, n=50, seed=1, iter=0, nthread=24
[
 [ 20 49 36 46  0  6 15 49  7 11  4 19  9 19 17 33 19 46 26 42 20 15 34 26 10 22 43 11  1 26 33 45 20 22 27 21  7 46  9 38 40 35 48 40 15  4 34 25 43 43 | 638 ]
 [ 44 41  4 41  1 13  8  2 43 33  4 29 21 33 47 20 26  9 34 14 15  7 34 39 41 20  0  1 37 31 49 33 37 14 14 22 39 11  5  3 22 23 45  4 14 45 14  5  6 26 | 561 ]
 [  0  4 33 45 10 45 13 14 24 29  2 28 28 30  7 47 29 13 34 11  5 26 20 47 34 24 20 27  2 38 26  2 33  6 25 39 47  1 29 44 45 27  6 22  6 44 40 18 19 26 | 597 ]
 [  8 32 46 18 17 28 37 31 36  6 44 34 31 32 37 17 17 38 13 17 44 37 21 44 48  0 33 24 31  3  5 39 47  3 22 17 28 47 20 18 11 38 45 38 28 15  0 38 30  7 | 660 ]
 [ 16 28 26  0 44 35 17 23 45 38 31 23  0 13 46 41 34 27 49  3  8 23  6 37 46  9 34 23  3 11 37 25 37 10 46  2 35 25  6  8  0 19  1  5  1 25 12  5 43 14 | 547 ]
 [ 26 11 27 48 42 13  6 11 13  4 29 28 48 20 28 18  0 40 40 14 11 35 40 30 19 21 43 37 37 21 27 21  6 18  2  7  6 46  2 45  5 39 11 30 35  1 27 32  0  6 | 563 ]
]
Running reduced dim shroeppel shamir
Running with 24 threads
Max reducible dimension is 4 (encoded with basis 10001)
Reducing 1 dimensions for Shroeppel-Shamir - leaving 5 for verification
Splitting sets into [0, 11]; [12, 24]; [25, 36]; [37, 50]
Generating 4096 possible subsets for as set of size 12.
Generating 8192 possible subsets for as set of size 13.
Generating 4096 possible subsets for as set of size 12.
Generating 8192 possible subsets for as set of size 13.
Running the search loop

    1     0.18s [0.000985 GB]:      0 +    638; 2 x 79 possible solutions
    2     0.18s [0.000986 GB]:      4 +    634; 2 x 102 possible solutions
    3     0.19s [0.000988 GB]:      6 +    632; 2 x 112 possible solutions
    4     0.19s [0.000989 GB]:      7 +    631; 2 x 127 possible solutions
    5     0.19s [0.000989 GB]:      9 +    629; 2 x 150 possible solutions
    6     0.19s [0.000990 GB]:     10 +    628; 4 x 153 possible solutions
    7     0.19s [0.000991 GB]:     11 +    627; 4 x 157 possible solutions
    8     0.19s [0.000991 GB]:     13 +    625; 4 x 178 possible solutions
    9     0.19s [0.000991 GB]:     14 +    624; 2 x 197 possible solutions
   10     0.19s [0.000991 GB]:     15 +    623; 8 x 206 possible solutions
   20     0.19s [0.000995 GB]:     25 +    613; 18 x 361 possible solutions
   30     0.19s [0.001000 GB]:     35 +    603; 46 x 615 possible solutions
   40     0.20s [0.001009 GB]:     45 +    593; 152 x 1008 possible solutions
   50     0.20s [0.001020 GB]:     55 +    583; 270 x 1610 possible solutions
   60     0.20s [0.001040 GB]:     65 +    573; 536 x 2473 possible solutions
   70     0.21s [0.001061 GB]:     75 +    563; 1054 x 3705 possible solutions
   80     0.21s [0.001096 GB]:     85 +    553; 1760 x 5392 possible solutions
   90     0.21s [0.001134 GB]:     95 +    543; 2958 x 7680 possible solutions
  100     0.22s [0.001189 GB]:    105 +    533; 4786 x 10679 possible solutions
Found market share solution from SS-Algorithm!
Subset for index 2161 (binary 0000000000000000000000000000000000000000000000000000100001110001): 20, 0, 6, 15, 19
Subset for index 4153 (binary 0000000000000000000000000000000000000000000000000001000000111001): 9, 33, 19, 46, 10
Subset for index 2681 (binary 0000000000000000000000000000000000000000000000000000101001111001): 22, 1, 26, 33, 45, 27, 7
Subset for index 3819 (binary 0000000000000000000000000000000000000000000000000000111011101011): 46, 9, 40, 48, 40, 15, 34, 25, 43
The sum is 60 + 117 + 161 + 300 = 638
Writing solution to markshare_m_6_n_50_seed_1.sol
Found feasible solution!
Eval GPU: check results     	 total time     0.02s
Eval GPU: binary search     	 total time     0.01s
Eval GPU: sort required     	 total time     0.03s
Candidate extraction        	 total time     0.03s
List traversal              	 total time     0.09s
Solution time               	 total time     0.27s
Evaluate solutions GPU      	 total time     0.07s
Setup time                  	 total time     0.18s
