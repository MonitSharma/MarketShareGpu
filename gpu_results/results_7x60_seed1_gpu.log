Storing mark share instance as markshare_m_7_n_60_seed_1.prb
Running markshare: m=7, n=60, seed=1, iter=0, nthread=24
[
 [ 25 59 43 55  0  7 18 59  8 14  5 23 11 23 20 40 23 56 32 50 25 18 41 31 12 26 52 13  1 32 40 54 25 27 33 25  8 56 11 46 48 42 58 48 18  5 41 31 52 51 53 49  5 49  2 16 10  3 52 40 | 910 ]
 [  5 35 25 40 57 24 31 11 41 17 18  8 41 46 50 24  1  2 45 37 59 39 44 17 16 26 47 13  6  4 26 28 54  5 17 54 17  7  7 31  1  5 40 55 12 54 15 17 29 35  3 33 34 36  8 57 35 15 41 13 | 806 ]
 [  6 32 24 56 41 29 24 32  2 45 32  2 39  8 30 47 56  1 35 52 54 32  8 26  8 53 48 22 23 32  9 39 55 21 20 34 45 38 43  7 52 41 37 38 45 21 20 45 16 21 53 45 25 52 57  0 39 29 37  4 | 943 ]
 [  6 47 56  3 26 21 34 56 24 22 14 45 54 46 34 18  0 46 37  9 19 34 31  0 53 42 21 28 54 45 37 28  0 16 55 49 41 33 59  4 10 28  8 44 55 11 41 27  3 13 45 30 45 12 55  2 42 31  7 10 | 883 ]
 [  1 23  1  6  1 30 14  6 51 17 32 13 33 58 50 16  7 14 16  5 35 34 58 25 33 22  1 48 48 17 13 43 48 36 23 25 51 45 44 25 33 25  8 21  3  9  7 56  2 54  6 46 13 36 42  2 33 39  0  7 | 755 ]
 [  4 17 58 21 34 16 12  4 15  9 44  9 11 56 34 22 58  3 50 44 14 17 29 12 37 58 49 53  9 45  1 39  4  2 29 48 36 45 34 27 19 31 59  6 34  8 22 30 33 12 44 54 40 27 15  7  3 45 22 12 | 816 ]
 [ 37  4 12  5 45  9  3 21 15  5 48  8 11 55 38 34 31 50 55 37 15 19  3 43 44 31 46 44 54  9 55 41  0 25 14 43 37 45 56 23 57 55 33 12 54  0 38 55 23 17 29 10 36  1 32 27 55 48 55 22 | 914 ]
]
Running reduced dim shroeppel shamir
Running with 24 threads
Max reducible dimension is 4 (encoded with basis 12001)
Reducing 1 dimensions for Shroeppel-Shamir - leaving 6 for verification
Splitting sets into [0, 14]; [15, 29]; [30, 44]; [45, 60]
Generating 32768 possible subsets for as set of size 15.
Generating 32768 possible subsets for as set of size 15.
Generating 32768 possible subsets for as set of size 15.
Generating 32768 possible subsets for as set of size 15.
Running the search loop

    1     0.49s [0.006295 GB]:      0 +    910; 2 x 609 possible solutions
    2     0.50s [0.006295 GB]:      1 +    909; 2 x 670 possible solutions
    3     0.50s [0.006307 GB]:      5 +    905; 2 x 791 possible solutions
    4     0.50s [0.006307 GB]:      6 +    904; 2 x 881 possible solutions
    5     0.50s [0.006310 GB]:      7 +    903; 2 x 876 possible solutions
    6     0.50s [0.006312 GB]:      8 +    902; 4 x 940 possible solutions
    7     0.50s [0.006312 GB]:      9 +    901; 2 x 1018 possible solutions
    8     0.50s [0.006312 GB]:     11 +    899; 2 x 1139 possible solutions
    9     0.50s [0.006313 GB]:     12 +    898; 6 x 1160 possible solutions
   10     0.50s [0.006316 GB]:     13 +    897; 8 x 1201 possible solutions
   20     0.51s [0.006327 GB]:     23 +    887; 16 x 1951 possible solutions
   30     0.51s [0.006343 GB]:     33 +    877; 48 x 3124 possible solutions
   40     0.52s [0.006367 GB]:     43 +    867; 128 x 4829 possible solutions
   50     0.52s [0.006402 GB]:     53 +    857; 234 x 7321 possible solutions
   60     0.52s [0.006456 GB]:     63 +    847; 626 x 10954 possible solutions
   70     0.53s [0.006517 GB]:     73 +    837; 1092 x 16053 possible solutions
   80     0.53s [0.006610 GB]:     83 +    827; 2110 x 22965 possible solutions
   90     0.54s [0.006748 GB]:     93 +    817; 3940 x 32364 possible solutions
  100     0.55s [0.006904 GB]:    103 +    807; 6440 x 45004 possible solutions
  200     0.68s [0.014704 GB]:    203 +    707; 316328 x 572940 possible solutions
Found market share solution from SS-Algorithm!
Subset for index 28736 (binary 0000000000000000000000000000000000000000000000000111000001000000): 18, 11, 23, 20
Subset for index 3109 (binary 0000000000000000000000000000000000000000000000000000110000100101): 40, 56, 25, 26, 52
Subset for index 13559 (binary 0000000000000000000000000000000000000000000000000011010011110111): 40, 54, 25, 33, 25, 8, 56, 48, 58, 48
Subset for index 6382 (binary 0000000000000000000000000000000000000000000000000001100011101110): 41, 31, 52, 53, 49, 5, 10, 3
The sum is 72 + 199 + 395 + 244 = 910
Writing solution to markshare_m_7_n_60_seed_1.sol
Found feasible solution!
Eval GPU: check results     	 total time     0.04s
Eval GPU: binary search     	 total time     0.10s
Eval GPU: sort required     	 total time     0.13s
Candidate extraction        	 total time     0.34s
List traversal              	 total time     0.40s
Solution time               	 total time     0.90s
Evaluate solutions GPU      	 total time     0.33s
Setup time                  	 total time     0.49s
