Storing mark share instance as markshare_m_8_n_70_seed_1.prb
Running markshare: m=8, n=70, seed=1, iter=0, nthread=24
[
 [ 29 69 50 65  0  8 21 69 10 16  6 27 13 27 24 46 27 65 37 59 29 21 47 36 14 31 61 16  1 37 46 63 29 32 39 30  9 65 13 54 56 50 67 56 21  6 48 36 61 60 62 58  5 58  2 19 11  4 61 46  6 41 29 47 67 28 37 13 48 20 | 1232 ]
 [ 22  9 48 54 58 28  1  2 52 43 69 46 52 20 19 31 55 15  7  5 31 32 63  6 20 63 20  8  9 36  1  5 47 64 14 63 18 20 34 40  3 39 40 42 10 66 41 18 48 16  7 37 28 66 48 34 28 37  3 53 37  3 46  9 36 55 66  2 41 61 | 1125 ]
 [ 63 37  9 31  9 62 56 26 27 37 11 45 64 25 24 39 52 44 50  8 61 48 43 45 52 24 24 53 18 24 62 52 29 61 67  0 46 34 43  5  8 55 66  4 31 24 40 65 28 26 16 53 63 54 40 21  0 54 43 10 22 40 36  0 62 49 25 32 63 53 | 1296 ]
 [ 43 32  1 18 65 58 48 38 69  4 12 33  9 51 65 13 48 32  4 16 52 35 52 14 64  3 49 36  8 12  1 27  1  7  1 35 17  7 60 20 37 16 38 67 58 19  8 16 19  6 41 39 67 29 39 25  1 56 56 20 16 50 56 42 27 29 60 52 52 29 | 1115 ]
 [ 38 29  9 25  4 10  8 65  3 64  7 54 15 43 49  2 39 45  0  9  5 20 67 25 39 19 14  5 17 10 52 11 13 65 40 25 67  3 59 51 16 20 34 14 43 68 58 62 10 53  1 45  4  2 34 56 42 53 39 31 22 37 69  7 40 10 26 35 38 15 | 1054 ]
 [ 52 64 46 32 18  9  4 53 25 14 44  5 14  6 52 11  4 24 18  6 56 10 13 65 44 40 36 58 64 43 18 22  4 50 51 36 54 51 63 11 65 48  0 29 16 50 43 52 66 27 66 64 38 14 64  0 44 64 27 20 34 11 42  1 38 31 64 56 64 25 | 1226 ]
 [ 27 42 67  2 12 24  8  5  9 48 35  0  1 32 66 67 57 23  1 33 12  7 23 35  9 61 56 37 24 19 65 24 40 62 61 16 59  1 63 67 32 30 38 24 55 40 20  8 34 66 41 21  1 66 41 15 30 17 56 60 22 16 62 57 40 38 12 13 55 41 | 1175 ]
 [ 42  3  3  1 29  3 47 27 64 40  0 60 68 55 26 17 68  5 42 11 58 14 40 29 43 24 19 48 41 48 52  5 60  2 52 55 48 63 60  0 22 18 46 32 31 25 26 16 28  1 28 37 22  9 43 39 30 11 68 29 47 47 13 19 29  0 24 15 55  2 | 1092 ]
]
Running reduced dim shroeppel shamir
Running with 24 threads
Max reducible dimension is 4 (encoded with basis 14001)
Reducing 1 dimensions for Shroeppel-Shamir - leaving 7 for verification
Splitting sets into [0, 16]; [17, 34]; [35, 51]; [52, 70]
Generating 131072 possible subsets for as set of size 17.
Generating 262144 possible subsets for as set of size 18.
Generating 131072 possible subsets for as set of size 17.
Generating 262144 possible subsets for as set of size 18.
Running the search loop

    1     0.50s [0.044045 GB]:      0 +   1232; 2 x 242 possible solutions
    2     0.50s [0.044045 GB]:      1 +   1231; 2 x 249 possible solutions
    3     0.50s [0.044049 GB]:      6 +   1226; 2 x 321 possible solutions
    4     0.50s [0.044049 GB]:      7 +   1225; 2 x 402 possible solutions
    5     0.50s [0.044050 GB]:      8 +   1224; 2 x 358 possible solutions
    6     0.50s [0.044051 GB]:      9 +   1223; 2 x 451 possible solutions
    7     0.50s [0.044051 GB]:     10 +   1222; 2 x 421 possible solutions
    8     0.50s [0.044052 GB]:     11 +   1221; 2 x 508 possible solutions
    9     0.50s [0.044052 GB]:     13 +   1219; 2 x 548 possible solutions
   10     0.50s [0.044053 GB]:     14 +   1218; 6 x 564 possible solutions
   20     0.51s [0.044059 GB]:     24 +   1208; 12 x 1076 possible solutions
   30     0.51s [0.044067 GB]:     34 +   1198; 18 x 1654 possible solutions
   40     0.51s [0.044081 GB]:     44 +   1188; 72 x 2951 possible solutions
   50     0.52s [0.044103 GB]:     54 +   1178; 172 x 4769 possible solutions
   60     0.52s [0.044134 GB]:     64 +   1168; 354 x 7351 possible solutions
   70     0.53s [0.044190 GB]:     74 +   1158; 664 x 12088 possible solutions
   80     0.54s [0.044248 GB]:     84 +   1148; 1174 x 17938 possible solutions
   90     0.54s [0.044378 GB]:     94 +   1138; 2390 x 27141 possible solutions
  100     0.55s [0.044519 GB]:    104 +   1128; 4444 x 41036 possible solutions
  200     0.74s [0.056734 GB]:    204 +   1028; 347912 x 1016352 possible solutions
  300     1.86s [0.177127 GB]:    304 +    928; 5922580 x 9317618 possible solutions
  400    11.51s [0.712580 GB]:    404 +    828; 35501738 x 39805392 possible solutions
Found market share solution from SS-Algorithm!
Subset for index 68800 (binary 0000000000000000000000000000000000000000000000010000110011000000): 21, 69, 6, 27, 27
Subset for index 169540 (binary 0000000000000000000000000000000000000000000000101001011001000100): 59, 36, 61, 16, 37, 29, 39
Subset for index 81884 (binary 0000000000000000000000000000000000000000000000010011111111011100): 65, 13, 54, 50, 67, 56, 21, 6, 48, 36, 61, 58
Subset for index 208549 (binary 0000000000000000000000000000000000000000000000110010111010100101): 5, 2, 4, 46, 41, 29, 47, 28, 48, 20
The sum is 150 + 277 + 535 + 270 = 1232
Writing solution to markshare_m_8_n_70_seed_1.sol
Found feasible solution!
Eval GPU: check results     	 total time     0.57s
Eval GPU: binary search     	 total time    12.68s
Eval GPU: sort required     	 total time     3.35s
Candidate extraction        	 total time     2.30s
List traversal              	 total time    17.25s
Solution time               	 total time    17.75s
Evaluate solutions GPU      	 total time    17.16s
Setup time                  	 total time     0.50s
