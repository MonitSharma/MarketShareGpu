Storing mark share instance as markshare_m_5_n_40_seed_2.prb
Running markshare: m=5, n=40, seed=2, iter=0, nthread=24
[
 [ 17  7  1 37 21 37 17 19 16 12 13  6  8 27 24  4 11 19 10 25 24 32 21 27  5 19 20 23  7 28 31 10 34 21 19 16 33  7  3 38 | 374 ]
 [ 20 11  2 11 17  4  3  7  5 19 23 22  9  8  4 30  8 23 13  6 18 14  8 18 25 26 19 31 20 26 15 24 31 39 23  4  6  5 28 34 | 329 ]
 [ 38 20 20  8 35 39 13 12 22 10 17 32 17 14 31 18 21 10 38 31 21 32  3 37 14 32 34 20 16  8  1 29  9 17  2 35 39 37 38 20 | 445 ]
 [ 32 28 24 28 30 19  6 38 11 17 20 12 14 30  1 37 39 28 17 20 20 35 12 22 10 22 15 15 33 37 29  0 15 29  0 14 31  8 10 14 | 411 ]
 [ 23 35  1 14 26 20 15 30 19 36 16 33 14 16 22 25 38 13  4 15 12 38  1 25 29 38 26 32  8  9 16 35 25 23 26 31  6 21 35 38 | 444 ]
]
Running reduced dim shroeppel shamir
Running with 24 threads
Max reducible dimension is 4 (encoded with basis 8001)
Reducing 1 dimensions for Shroeppel-Shamir - leaving 4 for verification
Splitting sets into [0, 9]; [10, 19]; [20, 29]; [30, 40]
Generating 1024 possible subsets for as set of size 10.
Generating 1024 possible subsets for as set of size 10.
Generating 1024 possible subsets for as set of size 10.
Generating 1024 possible subsets for as set of size 10.
Running the search loop

    1     0.34s [0.000133 GB]:      0 +    374; 1 x 30 possible solutions
    2     0.34s [0.000133 GB]:      1 +    373; 1 x 38 possible solutions
    3     0.35s [0.000134 GB]:      4 +    370; 1 x 46 possible solutions
    4     0.35s [0.000134 GB]:      5 +    369; 1 x 46 possible solutions
    5     0.35s [0.000134 GB]:      6 +    368; 1 x 61 possible solutions
    6     0.35s [0.000134 GB]:      7 +    367; 2 x 53 possible solutions
    7     0.35s [0.000135 GB]:      8 +    366; 2 x 67 possible solutions
    8     0.35s [0.000135 GB]:      9 +    365; 1 x 65 possible solutions
    9     0.35s [0.000135 GB]:     10 +    364; 2 x 75 possible solutions
   10     0.35s [0.000135 GB]:     11 +    363; 4 x 83 possible solutions
   20     0.35s [0.000137 GB]:     21 +    353; 12 x 151 possible solutions
   30     0.35s [0.000140 GB]:     31 +    343; 41 x 268 possible solutions
   40     0.36s [0.000144 GB]:     41 +    333; 109 x 463 possible solutions
   50     0.36s [0.000150 GB]:     51 +    323; 236 x 734 possible solutions
   60     0.36s [0.000159 GB]:     61 +    313; 491 x 1132 possible solutions
   70     0.37s [0.000171 GB]:     71 +    303; 887 x 1641 possible solutions
   80     0.37s [0.000185 GB]:     81 +    293; 1476 x 2256 possible solutions
Found market share solution from SS-Algorithm!
Subset for index 327 (binary 0000000000000000000000000000000000000000000000000000000101000111): 17, 7, 1, 17, 16
Subset for index 70 (binary 0000000000000000000000000000000000000000000000000000000001000110): 6, 8, 11
Subset for index 685 (binary 0000000000000000000000000000000000000000000000000000001010101101): 24, 21, 27, 19, 23, 28
Subset for index 619 (binary 0000000000000000000000000000000000000000000000000000001001101011): 31, 10, 21, 16, 33, 38
The sum is 58 + 25 + 142 + 149 = 374
Writing solution to markshare_m_5_n_40_seed_2.sol
Found feasible solution!
Eval GPU: check results     	 total time     0.01s
Eval GPU: binary search     	 total time     0.00s
Eval GPU: sort required     	 total time     0.00s
Candidate extraction        	 total time     0.00s
List traversal              	 total time     0.03s
Solution time               	 total time     0.37s
Evaluate solutions GPU      	 total time     0.02s
Setup time                  	 total time     0.34s
